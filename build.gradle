plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.2.30'
}

description = """ 
Gradle build file.
This uses the gradle wrapper, so when running (the first time) use 'gradlew check' so then it 
downloads the right gradle automatically.
"""

//buildscript {
//    ext.kotlin_version = '1.0.0'
//    repositories {
//        mavenCentral()
//    }
//    dependencies {
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//    }
//}

repositories {
//    maven { url "http://dl.bintray.com/jetbrains/spek" }
    mavenCentral()
    mavenLocal()
}

dependencies {
//    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Spek testing framework
//    testCompile 'org.jetbrains.spek:spek-api:1.1.2'
//    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.2'

    // JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'

    // Needed for JavaFX tests.
    testCompile "org.testfx:testfx-core:4.0.12-alpha"
    testCompile "org.testfx:testfx-junit:4.0.12-alpha"
    // Only needed for headless testing.
//    testCompile "org.testfx:openjfx-monocle:8u76-b04" // jdk-9+181 for Java 9
}

sourceSets {
    main.java.srcDirs += 'src'
    main.resources.srcDirs += 'src'
    test.java.srcDirs += 'test'
    test.resources.srcDirs += 'test'
}

// Java target version
sourceCompatibility = 1.8

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}
